services:
  reverse_proxy:
    image: traefik:v3.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      # - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=regru"
      - "--certificatesresolvers.myresolver.acme.email=heavycream9090@icloud.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entrypoint.to=websecure"
      - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - REGRU_USERNAME=${REGRU_USERNAME}
      - REGRU_PASSWORD=${REGRU_PASSWORD}

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"

  postgresql:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=main
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=timshee_store
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mjml:
    image: danihodovic/mjml-server
    platform: linux/amd64

  django:
    build:
      context: backend/
      dockerfile: prod.Dockerfile
    environment:
      - ALLOWED_ORIGINS=https://timshee.ru,http://89.104.68.172:8111
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=heavycream9090@icloud.com
      - DJANGO_SETTINGS_DEBUG_MODE=0
      - DJANGO_SETTINGS_UNSTABLE_MODE=0
      - DJANGO_SETTINGS_PRODUCTION_MODE=1
      - SERVER_ADDRESS=0.0.0.0
      - SERVER_PORT=8111
      - POSTGRES_DB_NAME=timshee_store
      - POSTGRES_DB_USER=main
      - POSTGRES_DB_PORT=5432
      - ACCOUNT_ID=${ACCOUNT_ID}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_DB_PASSWORD=${POSTGRES_DB_PASSWORD}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - MJML_APP_ID=${MJML_APP_ID}
      - MJML_APP_KEY=${MJML_APP_KEY}
      - MJML_OWN_SERVER_URL=${MJML_OWN_SERVER_URL}
      - CLIENT_REDIRECT=https://timshee.ru
    volumes:
      - prod.volume:/home/timshee_store_app/app/staticfiles
      - prod-image.volume:/home/timshee_store_app/app/media/product_images
    labels:
      # reverse proxy
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`timshee.ru`) && PathPrefix(`/api`) || PathPrefix(`/admin`)"
      - "traefik.http.routers.django.entrypoints=websecure"
      - "traefik.http.routers.django.tls.certresolver=myresolver"
      # watchtower
      - "com.centurylinklabs.watchtower.enable=true"
    command: ["python", "/home/timshee_store_app/app/entrypoint.py"]
    depends_on:
      - postgresql
    restart: on-failure

  frontend:
    build:
      context: frontend/
      dockerfile: prod.Dockerfile
    volumes:
      - prod.volume:/home/timshee_store_app/app/staticfiles
      - prod-image.volume:/home/timshee_store_app/app/media/product_images
    labels:
      # reverse proxy
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`timshee.ru`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      # watchtower
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - django
    restart: on-failure

  file_storage:
    build:
      context: file_storage/
      dockerfile: prod.Dockerfile
    volumes:
      - prod.volume:/home/timshee_store_app/app/staticfiles
      - prod-image.volume:/home/timshee_store_app/app/media/product_images
    labels:
      # reverse proxy
      - "traefik.enable=true"
      - "traefik.http.routers.file_storage.rule=Host(`timshee.ru`) && PathPrefix(`/backend/static`) || PathPrefix(`/backend/media`)"
      - "traefik.http.routers.file_storage.entrypoints=websecure"
      - "traefik.http.routers.file_storage.tls.certresolver=myresolver"
      # watchtower
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - django
    restart: on-failure

volumes:
  letsencrypt:
  prod.volume:
  prod-image.volume:
  postgres_data: